"""Added Project and ProjectMaterial tables

Revision ID: 1cda8224347e
Revises: 50b73a64c8de
Create Date: 2025-02-28 10:42:26.787368

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1cda8224347e"
down_revision: Union[str, None] = "50b73a64c8de"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "materials",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("units", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "projects",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "projectmaterials",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("material_id", sa.Integer(), nullable=False),
        sa.Column("volume", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["materials.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_projectmaterials_material_id"),
        "projectmaterials",
        ["material_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_projectmaterials_project_id"),
        "projectmaterials",
        ["project_id"],
        unique=False,
    )
    op.create_table(
        "sections",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_sections_project_id"), "sections", ["project_id"], unique=False
    )
    op.create_table(
        "aosrs",
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["sections.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_aosrs_section_id"), "aosrs", ["section_id"], unique=False)
    op.create_table(
        "sectionmaterials",
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("material_id", sa.Integer(), nullable=False),
        sa.Column("volume", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["materials.id"],
        ),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["sections.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_sectionmaterials_material_id"),
        "sectionmaterials",
        ["material_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sectionmaterials_section_id"),
        "sectionmaterials",
        ["section_id"],
        unique=False,
    )
    op.create_table(
        "aosrmaterials",
        sa.Column("aosr_id", sa.Integer(), nullable=True),
        sa.Column("material_id", sa.Integer(), nullable=True),
        sa.Column("volume", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["aosr_id"],
            ["aosrs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["materials.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_aosrmaterials_aosr_id"), "aosrmaterials", ["aosr_id"], unique=False
    )
    op.create_index(
        op.f("ix_aosrmaterials_material_id"),
        "aosrmaterials",
        ["material_id"],
        unique=False,
    )
    op.drop_table("material")
    op.drop_index("ix_aosr_section_id", table_name="aosr")
    op.drop_table("aosr")
    op.drop_table("section")
    op.drop_index("ix_aosrmaterial_aosr_id", table_name="aosrmaterial")
    op.drop_index("ix_aosrmaterial_material_id", table_name="aosrmaterial")
    op.drop_table("aosrmaterial")
    op.drop_index("ix_sectionmaterial_material_id", table_name="sectionmaterial")
    op.drop_index("ix_sectionmaterial_section_id", table_name="sectionmaterial")
    op.drop_table("sectionmaterial")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sectionmaterial",
        sa.Column("section_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("material_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("volume", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["material_id"], ["material.id"], name="sectionmaterial_material_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["section_id"], ["section.id"], name="sectionmaterial_section_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="sectionmaterial_pkey"),
    )
    op.create_index(
        "ix_sectionmaterial_section_id", "sectionmaterial", ["section_id"], unique=False
    )
    op.create_index(
        "ix_sectionmaterial_material_id",
        "sectionmaterial",
        ["material_id"],
        unique=False,
    )
    op.create_table(
        "aosrmaterial",
        sa.Column("aosr_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("material_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("volume", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["aosr_id"], ["aosr.id"], name="aosrmaterial_aosr_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["material_id"], ["material.id"], name="aosrmaterial_material_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="aosrmaterial_pkey"),
    )
    op.create_index(
        "ix_aosrmaterial_material_id", "aosrmaterial", ["material_id"], unique=False
    )
    op.create_index(
        "ix_aosrmaterial_aosr_id", "aosrmaterial", ["aosr_id"], unique=False
    )
    op.create_table(
        "section",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('section_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="section_pkey"),
        sa.UniqueConstraint("name", name="section_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "aosr",
        sa.Column("section_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"], ["section.id"], name="aosr_section_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="aosr_pkey"),
    )
    op.create_index("ix_aosr_section_id", "aosr", ["section_id"], unique=False)
    op.create_table(
        "material",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("units", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="material_pkey"),
        sa.UniqueConstraint("name", name="material_name_key"),
    )
    op.drop_index(op.f("ix_aosrmaterials_material_id"), table_name="aosrmaterials")
    op.drop_index(op.f("ix_aosrmaterials_aosr_id"), table_name="aosrmaterials")
    op.drop_table("aosrmaterials")
    op.drop_index(op.f("ix_sectionmaterials_section_id"), table_name="sectionmaterials")
    op.drop_index(
        op.f("ix_sectionmaterials_material_id"), table_name="sectionmaterials"
    )
    op.drop_table("sectionmaterials")
    op.drop_index(op.f("ix_aosrs_section_id"), table_name="aosrs")
    op.drop_table("aosrs")
    op.drop_index(op.f("ix_sections_project_id"), table_name="sections")
    op.drop_table("sections")
    op.drop_index(op.f("ix_projectmaterials_project_id"), table_name="projectmaterials")
    op.drop_index(
        op.f("ix_projectmaterials_material_id"), table_name="projectmaterials"
    )
    op.drop_table("projectmaterials")
    op.drop_table("projects")
    op.drop_table("materials")
    # ### end Alembic commands ###
